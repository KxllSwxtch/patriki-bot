import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("BOT_TOKEN")

# ID –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∏
GROUP_CHAT_ID = int(os.getenv("GROUP_CHAT_ID"))  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ ID - —ç—Ç–æ —á–∏—Å–ª–æ

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∫–ª–∏–µ–Ω—Ç –∏ –µ–≥–æ –Ω–∞–ø–∞—Ä–Ω–∏–∫)
ADMIN_IDS = {123456789, 987654321}  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ Telegram ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()


@dp.message()
async def handle_message(message: types.Message):
    if message.text and message.text.startswith("/start"):
        await message.reply(
            "–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
            "üìå –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:\n"
            "- –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–≥–æ\n"
            "- –í–∞—à–µ –∏–º—è\n"
            "- –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ Telegram\n"
            "- –õ—é–±—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n\n"
            "üì∑ –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –∫ –∑–∞—è–≤–∫–µ!\n\n"
            "üõç **–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:** [–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥](https://a.wsxc.cn/ItS5XIV)"
        )
    elif (
        message.text
        and message.text.startswith("/–∑–∞—è–≤–∫–∏")
        and message.from_user.id in ADMIN_IDS
    ):
        await message.reply("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ.")
    elif message.text or message.photo:
        order_text = message.caption if message.caption else message.text
        photo_id = message.photo[-1].file_id if message.photo else None

        if not (
            order_text
            and any(x in order_text.lower() for x in ["–∏–º—è", "—Ç–µ–ª–µ—Ñ–æ–Ω", "@", "tg"])
        ):
            await message.reply(
                "–§–æ—Ä–º–∞—Ç –∑–∞—è–≤–∫–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π!\n\n–ü—Ä–∏–º–µ—Ä:\n"
                "https://example.com/product\n"
                "–ò–º—è: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\n"
                "–¢–µ–ª–µ—Ñ–æ–Ω/Telegram: @ivanivanov\n"
                "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å: –ö–∞–∫–∏–µ –µ—Å—Ç—å —Ä–∞–∑–º–µ—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏? (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n\n"
                "üõç **–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:** [–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥](https://a.wsxc.cn/ItS5XIV)"
            )
            return

        order_text = f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:</b>\n{order_text}\n"

        if photo_id:
            await bot.send_photo(
                GROUP_CHAT_ID, photo_id, caption=order_text, parse_mode=ParseMode.HTML
            )
        else:
            await bot.send_message(GROUP_CHAT_ID, order_text, parse_mode=ParseMode.HTML)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∞—Ç—å –µ—â—ë –æ–¥–Ω—É –∑–∞—è–≤–∫—É"
        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("–ü–æ–¥–∞—Ç—å –µ—â—ë –æ–¥–Ω—É –∑–∞—è–≤–∫—É", callback_data="new_order")
        )

        await message.reply(
            "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è!\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–±–∏—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: https://a.wsxc.cn/ItS5XIV",
            reply_markup=keyboard,
        )


@dp.callback_query()
async def process_callback(callback_query: types.CallbackQuery):
    if callback_query.data == "new_order":
        await bot.send_message(
            callback_query.from_user.id, "üìå –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ."
        )


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
